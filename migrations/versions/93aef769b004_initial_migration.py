"""Initial migration 

Revision ID: 93aef769b004
Revises: 
Create Date: 2025-01-05 19:43:08.659088

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '93aef769b004'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blacklist',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blacklist_id'), 'blacklist', ['id'], unique=False)
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('icon_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_category_id'), 'category', ['id'], unique=False)
    op.create_index(op.f('ix_category_name'), 'category', ['name'], unique=True)
    op.create_table('employee',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('firstname', sa.String(length=120), nullable=False),
    sa.Column('lastname', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='gender'), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', name='accountstatus'), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('birthdate', sa.DateTime(), nullable=True),
    sa.Column('contract_type', sa.Enum('CDI', 'CDD', 'CIVP', 'APPRENTI', name='contracttype'), nullable=False),
    sa.Column('cnss_number', sa.String(length=15), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_employee_id'), 'employee', ['id'], unique=False)
    op.create_table('pricelist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activation_account',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Employee_id', sa.Integer(), nullable=True),
    sa.Column('token', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'USED', name='token_status'), nullable=False),
    sa.ForeignKeyConstraint(['Employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activation_account_id'), 'activation_account', ['id'], unique=False)
    op.create_table('change_password',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Employee_id', sa.Integer(), nullable=True),
    sa.Column('token', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'USED', name='token_status'), nullable=False),
    sa.ForeignKeyConstraint(['Employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_change_password_id'), 'change_password', ['id'], unique=False)
    op.create_table('customer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('pricelist_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['pricelist_id'], ['pricelist.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee_role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role', sa.Enum('SUPER_USER', 'ADMIN', 'VENDOR', 'INVENTORY_MANAGER', name='role'), nullable=True),
    sa.Column('Employee_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_role_id'), 'employee_role', ['id'], unique=False)
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('unit_price', sa.Float(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('image_link', sa.String(length=255), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('opened_at', sa.DateTime(), nullable=True),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.Column('session_status', sa.Enum('OPEN', 'CLOSED', 'PAUSED', name='sessionstatusenum'), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.String(length=10), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('pricelist_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customer.id'], ),
    sa.ForeignKeyConstraint(['pricelist_id'], ['pricelist.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pricelist_line',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pricelist_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('new_price', sa.Float(), nullable=True),
    sa.Column('min_quantity', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['pricelist_id'], ['pricelist.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('program',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('program_type', sa.Enum('DISCOUNT', 'BUYXGETY', name='programtypeenum'), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('discount', sa.Float(), nullable=True),
    sa.Column('product_buy_id', sa.Integer(), nullable=True),
    sa.Column('product_get_id', sa.Integer(), nullable=True),
    sa.Column('program_status', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_buy_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['product_get_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_line',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('unit_price', sa.Float(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('program_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', name='codestatusenum'), nullable=False),
    sa.Column('program_id', sa.Integer(), nullable=True),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.ForeignKeyConstraint(['program_id'], ['program.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('program_item')
    op.drop_table('order_line')
    op.drop_table('program')
    op.drop_table('pricelist_line')
    op.drop_table('order')
    op.drop_table('session')
    op.drop_table('product')
    op.drop_index(op.f('ix_employee_role_id'), table_name='employee_role')
    op.drop_table('employee_role')
    op.drop_table('customer')
    op.drop_index(op.f('ix_change_password_id'), table_name='change_password')
    op.drop_table('change_password')
    op.drop_index(op.f('ix_activation_account_id'), table_name='activation_account')
    op.drop_table('activation_account')
    op.drop_table('pricelist')
    op.drop_index(op.f('ix_employee_id'), table_name='employee')
    op.drop_table('employee')
    op.drop_index(op.f('ix_category_name'), table_name='category')
    op.drop_index(op.f('ix_category_id'), table_name='category')
    op.drop_table('category')
    op.drop_index(op.f('ix_blacklist_id'), table_name='blacklist')
    op.drop_table('blacklist')
    # ### end Alembic commands ###
